worker_processes auto;
worker_rlimit_nofile 100000;
error_log /var/log/nginx/error.log crit;

events {
    worker_connections 4000;
    use epoll;
    multi_accept on;
}

http {
    server_tokens off;
    
    #limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    #limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    access_log on;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    gzip on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    reset_timedout_connection on;

    client_body_timeout 10;
    send_timeout 2;
    keepalive_timeout 30;
    keepalive_requests 100000;
    
    log_format proxy '$remote_addr - $remote_user $request_time $upstream_response_time'
                     '[$time_local] "$request" $status $body_bytes_sent $request_body "$http_referrer"'
                     '"$http_user_agent" "$http_x_forwarded_for"';

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
       
upstream frontend {
    server http://localhost:4001;
}

upstream backend {
    server http://localhost:5001;
}
        
server {
    server_name nsf.localhost;
    listen 4000;
    listen [::]:4000;
    
    proxy_pass http://frontend;
    proxy_buffering on;
    proxy_set_header Host $host;
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;
    proxy_cache STATIC;
    proxy_cache_valid 200 1h;
    proxy_cache_use_stale error timeout inavlid_header updating http_500 http_502 http_503 http_504;
    health_check uri=/health_check;

    access_log logs/frontend.access.log proxy;
}

server {
    server_name nsb.localhost;
    listen 5000;
    listen [::]:5000;

    proxy_pass http://backend;
    proxy_buffering on;
    proxy_set_header Host $host;
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=STATIC:10m inactive=24h max_size=1g;
    proxy_cache STATIC;
    proxy_cache_valid 200 1h;
    proxy_cache_use_stale error timeout inavlid_header updating http_500 http_502 http_503 http_504;
    health_check uri=/health_check;

    location ^~/api/v1$ {        
        echo_read_request_body;
        
        map $request_body $req_body_start {
            
            default $request_body;
        }
    }

    location /api/v1/authenticate {        
        echo_read_request_body;
        
        map $request_body $req_body_start {
            
            default $request_body;
        }
    }

    access_log logs/backend.proxy.log proxy;
}
